.gradientBackground {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
    background-color: var(--background-dark);
    transition: background-color 0.5s ease;
}

/* --- Parallax Layers --- */
.parallaxLayer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-position: center;
    background-repeat: repeat;
    transition: transform 0.2s ease-out;
    background-image: var(--parallax-texture-url); /* Use theme variable */
}

.layer1 {
    z-index: 1;
    opacity: 0.2;
}

.layer2 {
    z-index: 2;
    opacity: 0.4;
}

/* --- Gradient Spheres --- */
.gradientSphere {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    z-index: 3;
    transition: background 0.5s ease;
}

.sphere1 {
    width: 40vw;
    height: 40vw;
    background: linear-gradient(40deg, var(--sphere-1-start), var(--sphere-1-end));
    top: -10%;
    left: -10%;
    animation: float-1 15s ease-in-out infinite alternate;
}

.sphere2 {
    width: 45vw;
    height: 45vw;
    background: linear-gradient(240deg, var(--sphere-2-start), var(--sphere-2-end));
    bottom: -20%;
    right: -10%;
    animation: float-2 18s ease-in-out infinite alternate;
}

.sphere3 {
    width: 30vw;
    height: 30vw;
    background: linear-gradient(120deg, var(--sphere-3-start), var(--sphere-3-end));
    top: 60%;
    left: 20%;
    animation: float-3 20s ease-in-out infinite alternate;
}

.glow {
    position: absolute;
    width: 40vw;
    height: 40vh;
    background: radial-gradient(circle, var(--glow-color), transparent 70%);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 4;
    animation: pulse 8s infinite alternate;
    filter: blur(30px);
    transition: background 0.5s ease;
}

.particlesContainer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 5;
    pointer-events: none;
}

.particle {
    position: absolute;
    background: var(--star-color); /* Use theme variable */
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
}

.gridOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: 40px 40px;
    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.03) 1px, transparent 1px),
                      linear-gradient(to bottom, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
    z-index: 6;
}

.noiseOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.05;
    z-index: 7;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
}

/* --- Keyframe Animations --- */
@keyframes float-1 {
    0% { transform: translate(0, 0) scale(1); }
    100% { transform: translate(10%, 10%) scale(1.1); }
}

@keyframes float-2 {
    0% { transform: translate(0, 0) scale(1); }
    100% { transform: translate(-10%, -5%) scale(1.15); }
}

@keyframes float-3 {
    0% { transform: translate(0, 0) opacity(0.3); }
    100% { transform: translate(-5%, 10%) scale(1.05) opacity(0.6); }
}

@keyframes pulse {
    0% { opacity: 0.3; transform: translate(-50%, -50%) scale(0.9); }
    100% { opacity: 0.7; transform: translate(-50%, -50%) scale(1.1); }
}